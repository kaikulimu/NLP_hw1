README for Homework 1

Authors:
Channing Kimble-Brown | ckimble3@jhu.edu
Jung Yang   | jyang99@jhu.edu
Yuan Jing Vincent Yan | vyan1@jhu.edu

ATTENTION:
To compile and run the random sentence generator use the command:
$ ./randsent grammar#
	where # is the grammar file number

Important files included:
    1. grammar
    2. grammar2
    3. grammar3
    4. grammar7
	5. grammar8
    6. README
    7. RandSent.java
    8. ParenthesisException.java

####################################################

Part 1 - 10 sample sentences:

is it true that a chief of staff with a sandwich with every chief of staff in a floor in every pickle with
a floor in every perplexed floor in the floor in the floor in a president with every floor on a pickle under
every pickle with every chief of staff in a pickle in a sandwich in the floor under every floor ate a pickled
chief of staff ?
a pickle ate every president on every perplexed sandwich on every perplexed chief of staff with the preside
nt in every floor in every pickle on the president in a pickle in a president !
is it true that every floor under every floor under the sandwich under the floor with the perplexed chief o
f staff on the fine fine pickle in every pickle under the chief of staff on a sandwich in the chief of staf
f under every president on a pickle with every president in the pickled chief of staff understood every flo
or in every sandwich on the chief of staff in every pickled pickle ?
every delicious pickle kissed the sandwich in the pickle on every pickled chief of staff under a floor under
a fine sandwich with every perplexed chief of staff .
is it true that a chief of staff wanted the pickled fine president ?
is it true that a perplexed chief of staff pickled a pickle ?
every president ate the sandwich in the sandwich with every floor with the pickled sandwich with the floor
with a floor !
is it true that a sandwich understood a president on every chief of staff ?
is it true that a pickle under every president pickled every sandwich ?
the president pickled a delicious pickled perplexed pickled pickled chief of staff !


2. (a) The sentences tend to be long because of the rule NP --> NP PP because it goes into
       loops of adding a noun phrase with an extra prepositional
       phrase that always adds another noun phrase. Every time you have a noun
       phrase you have a 50% probability of effectively adding another noun phrase since the only
       other noun phrase rule is NP --> Det Noun, which is equally likely.
   (b) The probability of choosing the Noun --> Adj Noun rule is only 1/6, and this is the only way
       to generate adjectives.
   (c) -- code adjusted in RandSent.java to accommodate probabilities --
   (d) To fix (a) you must make the NP --> Det Noun have a larger probability than
       NP --> NP PP. To fix (b) you must increase the probability of Noun --> Adj Noun
       so that terminals drastically more likely anymore.
   (e) I adjust the frequencies of various terminals like nouns such that it was more indicative
       of our personal experience with real life English sentences.

Sample sentences:

is it true that the perplexed floor kissed the perplexed chief of staff ?
every president wanted the delicious president .
the floor wanted the chief of staff .
a fine fine pickle with a chief of staff on a chief of staff pickled the fine floor .
the chief of staff understood the chief of staff !
is it true that the president kissed every chief of staff in the fine fine fine chief of staff ?
is it true that the chief of staff understood every perplexed president on every president ?
the chief of staff ate a pickle .
is it true that the floor in the fine sandwich pickled the fine chief of staff ?
is it true that every chief of staff understood a fine pickled president in every fine floor ?


3. -- generate and display 10 sentences using grammar3 --
   (a) We added a proper noun nonterminal that only had the terminal 'Sally': NP --> PNoun, PNoun --> Sally
   (b) We added a conjunction nonterminal to verb phrases and noun phrases and added the terminal 'and':
       VP --> Verb Conj VP, VP --> VP Conj VP, NP --> NP Conj NP, Conj --> and
   (c) We created an intransitive verb rule and a verb phrase rule that uses IVerb: VP --> IntransVerb,
       IntransVerb --> sighed
   (d) We created a new verb phrase rule and a new MentVerb category that currently only contains 'thought':
       VP --> MentVerb that S, MentVerb --> thought
   (e) We created a new ItThatVerb nonterminal that represents verbs that are compatible with "it ___ that" which
       currently only contains 'perplexed' and a new S rule: S --> it ItThatVerb NP that S, ItThatVerb --> perplexed
   (f) We created a new ItThatVerb nonterminal that represents verbs that are compatible with "it ___ that" which
       currently only contains 'perplexed' and another new S rule: S --> that S ItThatVerb NP, ItThatVerb --> perplexed
   (g) We created an Adv nonterminal and a new Adj rule: Adj --> Adv Adj, Adv --> very
   (h) We added rules to Noun that go to the terminals 'proposal' and 'desk' and we we made "worked"
       into a special verb called PrepVerb because it requires a preposition in its transitive form.

Sample sentences:

is it true that every floor and Sally wanted every pickle and sighed ?
every perplexed chief of staff understood Sally .
is it true that it perplexed the perplexed fine floor that every floor pickled a pickle and ate Sally ?
a desk ate Sally and Sally and every pickle and pickled the floor .
that it perplexed Sally that the very pickled fine pickle in the fine president understood Sally in a desk perplexed Sally .
that every president with a president pickled every proposal on the perplexed president perplexed the president in Sally !
the proposal pickled Sally under the pickled floor .
the very fine very delicious president sighed !
is it true that every pickle under the pickle on every floor and Sally understood and understood and kissed and wanted every delicious sandwich ?
is it true that Sally sighed ?

4.  -- see adjustments in RandSent.java --

    (ROOT is
          it
          true
          that
          (S it
             (Past perplexed)
             (NP (PNoun Sally))
             that
             (S it
                (Past perplexed)
                (NP (PNoun Sally))
                that
                (S it
                   (Past perplexed)
                   (NP (PNoun Sally))
                   that
                   (S (NP (PNoun Sally))
                      (VP (Verb kissed)
                          (NP (Det every)
                              (Noun (Adj perplexed)
                                    (Noun (Adj perplexed)
                                          (Noun sandwich)))))))))
          ?)
    (ROOT (S it
             (Past perplexed)
             (NP (Det every)
                 (Noun president))
             that
             (S that
                (S that
                   (S it
                      (Past perplexed)
                      (NP (Det a)
                          (Noun chief
                                of
                                staff))
                      that
                      (S (NP (NP (PNoun Sally))
                             (PP (Prep under)
                                 (NP (Det the)
                                     (Noun (Adj pickled)
                                           (Noun chief
                                                 of
                                                 staff)))))
                         (VP (PVerb worked)
                             (Prep with)
                             (NP (PNoun Sally)))))
                   (Past perplexed)
                   (NP (Det the)
                       (Noun floor)))
                (Past perplexed)
                (NP (Det every)
                    (Noun (Adj delicious)
                          (Noun desk)))))
          .)
    (ROOT is
          it
          true
          that
          (S (NP (NP (NP (Det every)
                         (Noun floor))
                     (Conj and)
                     (NP (NP (NP (Det a)
                                 (Noun floor))
                             (Conj and)
                             (NP (Det a)
                                 (Noun president)))
                         (Conj and)
                         (NP (Det the)
                             (Noun (Adj fine)
                                   (Noun pickle)))))
                 (Conj and)
                 (NP (PNoun Sally)))
             (VP (Verb ate)
                 (NP (Det the)
                     (Noun (Adj perplexed)
                           (Noun (Adj fine)
                                 (Noun (Adj pickled)
                                       (Noun desk)))))))
          ?)
    (ROOT (S it
             (Past perplexed)
             (NP (NP (Det a)
                     (Noun desk))
                 (Conj and)
                 (NP (PNoun Sally)))
             that
             (S that
                (S that
                   (S (NP (Det every)
                          (Noun floor))
                      (VP (Verb (Verb ate)
                                (Conj and)
                                (Verb kissed))
                          (NP (Det the)
                              (Noun pickle))))
                   (Past perplexed)
                   (NP (NP (Det every)
                           (Noun (Adj (Adv very)
                                      (Adj fine))
                                 (Noun (Adj perplexed)
                                       (Noun president))))
                       (Conj and)
                       (NP (Det a)
                           (Noun desk))))
                (Past perplexed)
                (NP (PNoun Sally))))
          .)
    (ROOT is
          it
          true
          that
          (S (NP (Det every)
                 (Noun floor))
             (VP (Verb ate)
                 (NP (Det a)
                     (Noun chief
                           of
                           staff))))
          ?)

5. (a) The alternative derivation is as follows:
	   
	   (ROOT (S (NP (NP (Det every)
	   				    (Noun sandwich))
	                (PP (Prep with)
					    (NP (NP (Det a)
							    (Noun pickle))
						    (PP (Prep on)
							    (NP (Det the)
								    (Noun floor))))))
	            (VP (V wanted)
				    (NP (Det a)
					    (Noun president))))
			  .)

   (b) Each derivation has a different meaning. The first derivation 
       suggests that it's the sandwiches with pickles that are both on
	   the ground and wanting a president. The second derivation says 
	   that sandwiches want a president when their pickles are on the 
	   floor. The main difference is in which noun phrase 'on' is modifying.

6. (a) Sometimes it will find an alternative. This is because some sentences
	   are ambiguous, meaning that they can be derived using more than one
	   set of steps. It will likely "misunderstand" by choosing the most
	   likely sentence parsing even if you intended the sentence to have
	   a parsing that is more rare.

   (b) There are 5 ways to analyze the noun phrase. You can verify this by
       breaking the noun phrase up into its 4 sub-noun phrases with 
	   3 prepositions that have to compose with a neighboring noun phrase
	   of some sort. So if you number the sub-noun phrases 1 (every sandwich),
	   2 (a pickle), 3 (the floor), and 4 (the chief of staff) then you can
	   count all the ways to connect them in a binary tree where they must
	   read in order from left to right. Every intermediate node is an NP
	   resulting from joining to sub-NPs by a preposition. So to count the 
	   number of ways you can interpret the sentence, you start by composing 1
	   and 2 first to yield NP1. Then you can either choose to compose NP1 with
	   3 before composing with 4 which is our first full NP interpretation, or 
	   you can compose 3 and 4 first to yield NP2 and then compse NP1 and NP2.
	   The third interpretation is the mirror of the first, so you would 
	   compose 3 and 4 first to yield NP3 and then compose NP3 with 2 before
	   composing with 1. The fourth interpretation requries starting by
	   composing 2 and 3 first to yield NP4 then composing NP4 with 1 before 
	   composing with 4. The fifth and final interpretation is just the mirror
	   of the fourth, in that you still compose 2 and 3 first, but this time 
	   you compose the NP4 they yield with 4 before composing with 1.

   (c) We noticed that the number of parses directly correlates with the number
       of prepositions in the NP in question.

	   number of parses: 		1, 2, 5, 14, 42, 132
	   number of prepositions: 	1, 2, 3,  4,  5,   6

	   We find this pattern to fit the Catalan Numbers, which occurs in various counting
	   problems, often involving recursively-defined objects. It reflects the very
	   recursive nature of natural language.

	   In grammar3, conjunctions work just like prepositions in that they compose noun
	   phrases, verb phrases and verbs to create more complex phrases. Each conjunction
	   used will also increase the number of parses.

   (d) i. the president ate the sandwich .
          The probability is so small because it is derived from the many outcomes from a
          multi-layer tree with many branches on each layer.
          The probability 5.144e-05 comes from multiplying the probabilities as follows:
          First, the probability that a sentence is in the structure "S ." as opposed to "S ?"
          and "is it true that S ?" is 1/3. Then, S . consists of NP VP which is essentially
          NP Verb NP. There are 5 choices for verb so the probability that it is "ate" is 1/5.
          For Noun Phrases, there is a 50% chance that is is simply "Det Noun". Then, since
          there are 3 determiners and 6 noun rules, the probability that it is "the president"
          is 1/36. Same for "the sandwich". Thus in total the probability is:
                            1/3 * 1/5 * 1/36 * 1/36 = 5.144e-05

          Since there is only one possible derivation of this sentence, the probability of
          generating this sentence is equal to the probability of generation the best derivation.

          Which is also the reason why p(best_parse|sentence) = 1.
      ii. The 0.5 means that given the observed sentence, there is a .5 chance of getting the
          most probable parse. It is exactly .5 because there are exactly two equally likely
          parses. As you can see below, the noun phrase below can derive into two noun phrases
          separated by a preposition. Then, the same process can happen to NP_1 or NP_2 so that
          we get the noun phrase "every sandwich with a pickle on the floor". This process is
          equally likely for both NP_1 and NP_2.

                            NP --> NP_1 PP --> NP_1 Prep NP_2
     iii.                          sum over i from i to N of [- log_2 q(x_i)]
          cross entropy per word = ------------------------------------------
                                        sum over i from i to N of |x_i|
                                   [- log_2 (5.144032922e-5)] + [-log_2 (1.240362877e-9)]
                                 = ------------------------------------------------------
                                                    6   +    12
                                 = -(-43.8333312 log-prob. / 18 words)
                                 = 2.435185067 bits
      iv. perplexity = 2 ^ cross entropy per word = 2 ^ 2.435185067 = 5.408337062
       v.                           sum over i from i to N of [- log_2 q(x_i)]
           cross entropy per word = ------------------------------------------
                                         sum over i from i to N of |x_i|
                                    [- log_2 (5.144032922e-5)] + [-log_2 (0)]
                                  = ------------------------------------------------------
                                                     6   +    4
                                  = infinity
           The compression program might not be able to compress because theoretically it would
           require an infinite number of bits per word based on cross entropy analysis. The reason
           that it theoretically requires an infinite number of bits is because it is impossible
           to generate the sentence 'the president ate .' using our grammar.
   (e) ./randsent grammar2 100 | ./parse -P -g grammar2
       entropy = 1.853425741 bits = -(-2216.697186 log-prob. / 1196 words)

       ./randsent grammar3 100 | ./parse -P -g grammar3
       entropy = 2.237615435 bits = -(-4123.925247 log-prob. / 1843 words)

       grammar3 has a higher entropy than grammar2 because it is capable of generating several
       more types of phenomena making it more "creative" and more likely to produce sentences that
       would surprise itself.

       ./randsent grammar 100 | ./parse -P -g grammar
       The computation took a long time because it was likely to generate extremely long sentences
       with strings of prepositions and noun phrases due to the high probability of choosing the
       NP --> NP PP rule.

   (f) ./randsent grammar2 100 | ./parse -P -g grammar
       cross-entropy = 2.029495601 bits = -(-2323.772463 log-prob. / 1145 words)

       ./randsent grammar2 100 | ./parse -P -g grammar3
       cross-entropy = 2.441195229 bits = -(-2817.139294 log-prob. / 1154 words)

       entropy of grammar2:
       entropy = 1.853425741 bits (see part e for how we got this)

       It is true that grammar2 predicts its own corpus better than grammar and grammar3 because
       as shown, the entropy of grammar2 is lower than grammar2's cross entropy with grammar and
       grammar3. grammar2 predicts best because the corpus is generated from grammar2 itself, so
       grammar2 perfectly captures the expected true distribution of the corpus.

7. (b) Yes-no questions
        Sample sentences:
		
        could every proposal sigh ?
        can it perplex every pickled delicious chief of staff under every sandwich that that the perplexed desk in a proposal sighed and sighed and had sighed has perplexed every pickle ?
        would a sandwich think and think that a floor wanted every fine proposal and the desk and the fine proposal ?
        should a sandwich work with a chief of staff ?
        should it perplex and perplex and perplex and perplex Sally and the president and every chief of staff that that a pickle had been wanting a chief of staff had perplexed a proposal ?

        Note: We generated the sentences above by significantly increasing the weight of question sentences in grammar7.

        Discussion: We created the rule: "ROOT --> QW QS ?" in order to generate yes-no questions. QW stands for
        question words that appear at the beginning of the sentence, such as "will" and "did". QS stands for the rest
        of the question sentence. The sentence structure of QS is very similar to normal sentences derived from S. The
        only difference is that the main verb(s) in the QS is always in the infinitive form. We also allow conjunctions
        in yes-no questions between infinitive verb forms.

   (f) Tenses
        Sample sentences:
		
        Sally is thinking that every sandwich and the chief of staff on Sally and every floor has kissed a chief of staff under a desk and the very very fine sandwich .
        did the pickle under Sally and a president and the sandwich under every pickle and the floor and Sally in the proposal eat every chief of staff and work on a perplexed pickled pickled perplexed very pickled proposal
        and think that a floor is eating Sally and will sigh and had kissed the chief of staff and sigh ?
        is it true that the proposal will have been pickling a desk ?
        is it true that the floor had been thinking that it had perplexed the president that Sally will have understood the sandwich and will have eaten a delicious chief of staff ?
        a pickled fine president was thinking that it has perplexed Sally under every president in the very pickled proposal and every proposal and every perplexed proposal that the perplexed fine pickle and the perplexed fl
        oor on Sally will sigh .

        Discussion: We added several verb tenses and forms by creating a hierarchy. The top level being different types
        of verbs which then lead to different tenses which finally lead to their actual forms. For example, if we
        were to generate an intransitive verb in progressive past tense then we would use the following rules:
                        IntransVerb --> IntransPast --> was IntransProgForm --> was sighing

        We also added conjunctions for each type of verb to avoid mixing types in unforeseen ways.
		
8.	To better describe English in our grammar, we did the following modifications to grammar8:
	(i) We added a variety of nouns, verbs, adjectives, determiners, conjunctions and prepositions. An example of
	    each would be "dragon", "amused", "beautiful", "each", "or", and "around" respectively.
	(ii)Introduced the imperative sentences (commands), such as "stop !" and "eat the sandwich !".

		Sample sentences:
		
		pickle each sandwich !
		work beside the tall dragon !
		eat no fan and all floor or a fine dragon at one table and one chicken !
		rest under one table !
		think that each desk will have been pickling the delicious small delicious delicious table and no president through a giant and the fine floor !